version: '3.8'

services:
  app:
    build:
      context: ../
      dockerfile: ./.devcontainer/Dockerfile
    ports:
      - ${PORT}:${PORT}
    env_file:
      - ../.env
    networks:
      - db_network

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    ports:
      - ${MONGO_DB_PORT}:27017
    networks:
      - db_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_DB_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_DB_USERNAME}:${MONGO_DB_PASSWORD}@mongo:${MONGO_DB_PORT}/
    networks:
      - db_network

  postgresdb:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - ../db-data:/var/lib/postgresql/data
      - ../docker-initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_USER: ${POSTGRES_DB_USERNAME}
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - db_network

networks:
  db_network:
    driver: bridge

volumes:
  mongodb-data: